function [ ER,CMS,validationPredictions ] = neural_network_model( predictors,response,cliptypes )
% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by NPRTOOL
%

inputs = predictors';
targets = zeros(length(unique(response)),length(response));
for i=1:length(response)
    targets(response(i),i)=1;
end

% Create a Pattern Recognition Network
hiddenLayerSize = 100;
net = patternnet(hiddenLayerSize);

% Set up Division of Data for Training, Validation, Testing
% net.divideParam.trainRatio = 50/100;
% net.divideParam.valRatio = 25/100;
% net.divideParam.testRatio = 25/100;

% trainInd=[];
% valInd=[];
% testInd=[];
% for i=1:length(cliptypes)
%     ind=find(response==i);
%     a=randperm(length(ind));
%     index=[];
%     for j=1:length(ind)
%     index(j)=ind(a(j));
%     end
%     trainInd=[trainInd index(1:fix(length(index)/2))];
%     valInd=[valInd index(fix(length(index)/2)+1:fix(length(index)*0.75))];
%     testInd=[testInd index(fix(length(index)*0.75)+1:end)];
% end

load('tr.mat');
net.divideFcn='divideind';
net.divideParam.trainInd = tr.trainInd;
net.divideParam.valInd = tr.valInd;
net.divideParam.testInd = tr.testInd;

% Train the Network
[net,tr] = train(net,inputs,targets);
save('tr.mat','tr');
view(net);
% Test the Network
outputs = net(inputs);
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs)

% View the Network
% view(net)

% Plots
% Uncomment these lines to enable various plots.
figure(1), h1=plotperform(tr);
saveas(h1,'perform.fig');
set(gcf,'Visible','off');

figure(2), h2=plottrainstate(tr);
saveas(h2,'trainstate.fig');
set(gcf,'Visible','off');

figure(3), h3=plotconfusion(targets,outputs);
set(gca,'xticklabel',[cliptypes,' ']);
set(gca,'yticklabel',[cliptypes,' ']);
saveas(h3,'confusion.fig');
set(gcf,'Visible','off');

figure(4), h4=ploterrhist(errors);
saveas(h4,'errhist.fig');
set(gcf,'Visible','off');

test_ind=[tr.testInd tr.valInd];
test_targets=targets(:,test_ind);
test_labels=response(test_ind);
test_outputs=outputs(:,test_ind);
figure(5);
x=cell(length(cliptypes),1);
y=cell(length(cliptypes),1);
acu=zeros(length(cliptypes),1);
for i=1:length(cliptypes)
    [x{i},y{i},~,acu(i)] = perfcurve(test_labels,test_outputs(i,:),i);
end
hold on
title('ROC')
set(gca, 'LineStyleOrder', {'-'});
for ii=1:length(cliptypes)
    h5=plot(x{ii}, y{ii},'LineWidth',2);
end
legend(cliptypes);
ylim([0.6,1]);
save('roc.mat','test_labels','test_outputs');
save('acu.mat','acu');
saveas(h5,'roc.fig');
set(gcf,'Visible','off');
%%%test confusion
figure(6), h6=plotconfusion(test_targets,test_outputs);
set(gca,'xticklabel',[cliptypes,' ']);
set(gca,'yticklabel',[cliptypes,' ']);
saveas(h6,'testconfusion.fig');

end

